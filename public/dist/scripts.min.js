'use strict';

angular.module('profileApp', ['ngStorage', 'ui.router']);

(function () {
  angular.module('profileApp').config(authConfig);

  function authConfig($httpProvider) {
    $httpProvider.interceptors.push(function ($q, $injector, $localStorage) {
      return {
        'request': function request(config) {
          config.headers = config.headers || {};

          if ($localStorage.token) {
            config.headers.Authorization = 'Bearer ' + $localStorage.token;
          }

          return config;
        },
        'responseError': function responseError(response) {
          var invalidTokenMessages = ['INVALID_TOKEN', 'NO_TOKEN_PROVIDED'];
          var state = $injector.get('$state');

          if (response.status === 403 && invalidTokenMessages.indexOf(response.data.message) >= 0) {
            state.go('login', { errorMessage: 'Please, login first.' });
          }

          return $q.reject(response);
        }
      };
    });
  }
})();

(function () {
  angular.module('profileApp').config(routes);

  function routes($urlRouterProvider) {
    $urlRouterProvider.otherwise('/login');
  }
})();

(function () {
  angular.module('profileApp').controller('LoginController', LoginController);

  function LoginController($scope, $state, authService, $stateParams) {
    $scope.user = {};
    $scope.error = $stateParams.errorMessage;

    $scope.login = function () {
      authService.login($scope.user).then(function (res) {
        $state.go('profile.show', { successMessage: 'Welcome back!' });
      })['catch'](function (res) {
        switch (res.data.message) {
          case 'WRONG_EMAIL_OR_PASSWORD':
            $scope.error = 'Wrong email or password.';
            break;
          case 'NO_EMAIL_OR_PASSWORD_PROVIDED':
            $scope.error = 'Please, provide email and password.';
            break;
        }
      });
    };
  }
})();

(function () {
  angular.module('profileApp').config(routes);

  function routes($stateProvider) {
    $stateProvider.state('login', {
      url: '/login',
      templateUrl: 'javascripts/routes/login/login.template.html',
      controller: 'LoginController'
    });
  }
})();

(function () {
  angular.module('profileApp').service('authService', authService);

  function authService($http, $localStorage) {
    this.login = function (user) {
      return $http.post('/users/authenticate', user).then(function (res) {
        $localStorage.token = res.data.token;

        return res;
      });
    };

    this.logout = function () {
      $localStorage.token = null;
    };

    this.getUserLoggedIn = function () {
      return $http.get('/users/logged-in').then(function (user) {
        return user.data;
      });
    };
  }
})();

(function () {
  angular.module('profileApp').controller('ProfileController', ProfileController);

  function ProfileController($scope, $state, authService, userLoggedIn) {
    $scope.user = userLoggedIn;

    $scope.logout = function () {
      authService.logout();

      $state.go('login');
    };
  }
})();

(function () {
  angular.module('profileApp').config(routes);

  function routes($stateProvider) {
    var userResolve = {
      userLoggedIn: function userLoggedIn(authService) {
        return authService.getUserLoggedIn();
      }
    };

    $stateProvider.state('profile', {
      url: '/profile',
      resolve: userResolve,
      abstract: true,
      controller: 'ProfileController',
      templateUrl: 'javascripts/routes/user/profile/profile.template.html'
    }).state('profile.show', {
      url: '',
      templateUrl: 'javascripts/routes/user/profile/show/profile-show.template.html'
    }).state('profile.edit', {
      url: '/edit',
      templateUrl: 'javascripts/routes/user/profile/edit/profile-edit.template.html',
      controller: 'ProfileEditController'
    });
  }
})();

(function () {
  angular.module('profileApp').controller('ProfileEditController', ProfileEditController);

  function ProfileEditController($scope, $state) {
    $scope.save = function () {
      $state.go('profile.show');
    };
  }
})();